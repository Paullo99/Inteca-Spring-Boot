#version: '3.7'

#services:
    #service 1: definition of mysql database
 #   docker-mysql:
  #    image: mysql:latest
   #   environment:
    #    - MYSQL_DATABASE=productdb
     #   - MYSQL_PASSWORD=root
      #  - MYSQL_ROOT_PASSWORD=root
#      ports:
#        - "3307:3306"     
#      command: --init-file /data/application/init.sql
#      volumes:
#        - ./product.sql:/data/application/init.sql
        
    
    #service 3: definition of your spring-boot app 
    #productdocker:                        #it is just a name, which will be used only in this file.
    #  image: product               #name of the image after dockerfile executes
#      container_name: product-app  #name of the container created from docker image
#      build:
#        context: .                          #docker file path (. means root directory)
#        dockerfile: Dockerfile              #docker file name
 #     ports:
 #       - "8180:8180"                       #docker containter port with your os port
        
#      depends_on:                           #define dependencies of this app
#        - docker-mysql                                #dependency name (which is defined with this name 'db' in this file earlier)
#      environment:
#          - DATABASE_HOST=docker-mysql
#          - DATABASE_USER=root
#          - DATABASE_PASSWORD=root
#          - DATABASE_NAME=productdb
#          - DATABASE_PORT=3306

version: '3'
services:
  workaround-mysql:
    container_name: workaround-mysql
    image: mysql
    environment:
      MYSQL_DATABASE: productdb
      MYSQL_PASSWORD: root
      MYSQL_ROOT_PASSWORD: root
      MYSQL_ROOT_HOST: '%'
    ports:
      - "3308:3306"
    restart: always
  workaround:
    depends_on: 
      - workaround-mysql
    restart: always
    # will build ./docker/workaround/Dockerfile
    build: .
    expose:
      - "8080"
    command: "mvn clean spring-boot:run"
